# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
#version: 2
#jobs:
#  build:
#    docker:
#      - image: circleci/openjdk:8-jdk
#    working_directory: ~/repo
#    environment:
#      JVM_OPTS: -Xmx3200m
#      TERM: dumb
#    steps:
#      - checkout
#      - setup_remote_docker
#      - restore_cache:
#          keys:
#            - v1-dependencies-{{ checksum "build.gradle" }}
#            - v1-dependencies-
#      - run: gradle dependencies
#      - save_cache:
#          paths:
#            - ~/.gradle
#          key: v1-dependencies-{{ checksum "build.gradle" }}
#      - run:
#          name: Running Unit Tests
#          command: gradle test
#      - run:
#          name: Building the project
#          command: gradle build
#      - run:
#          name: Setup VirtualEnv
#          command: |
#            echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
#            echo 'export IMAGE_NAME=cargaraage' >> $BASH_ENV
#      - run:
#          name: Initializing Docker
#          command: docker swarm init
#      - run:
#          name: Build Docker Image
#          command: docker build -t bitbyte01/$IMAGE_NAME:$TAG .
#      - run:
#          name: Docker Hub Login
#          command: echo $DOCKER_PWD | docker login -u $DOCKER_UNAME --password-stdin
#      - run:
#          name: Push to Docker Hub
#          command: docker push bitbyte01/$IMAGE_NAME:$TAG
#  deploy-to-eb:
#    steps:
#      - run:



version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: /tmp
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: |
          ls -l
          gradle dependencies
#      - save_cache:
#          paths:
#            - ~/.gradle
#            key: v1-dependencies-{{ checksum "build.gradle" }}
      - run:
          name: Running Unit Tests
          command: gradle test
      - run:
          name: Building the project
          command: gradle build
      -run: ls -l
#      - run:
#          name: Build Docker Image
#          command: docker build -t bitbyte01/cargaraage:$CIRCLE_BUILD_NUM .
#       -run: docker save -o c:/myfile.tar bitbyte01/cargaraage:$CIRCLE_BUILD_NUM
#  publish:
#    docker:
#      - image: circleci/buildpack-deps:stretch
#    steps:
#      - setup_remote_docker
#      - run: docker load -i c:/myfile.tar
#      - run:
#          name: Docker Hub Login
#          command: echo $DOCKER_PWD | docker login -u $DOCKER_UNAME --password-stdin
#      - run:
#          name: Push to Docker Hub
#          command: docker push bitbyte01/cargaraage:$CIRCLE_BUILD_NUM
workflows:
  version: 2
  build-master:
    jobs:
      - build:
          filters:
            branches:
              ignore: readme
      - publish:
          requires:
            - build
          filters:
            branches:
              ignore: readme
#
#version: 2.1
#
#executors:
#  my-executor:
#    docker:
#      - image: circleci/openjdk:8-jdk
#    working-directory: /tmp
#  jobs:
#    build:
#      exector: my-executor
#      steps:
#        - run: mkdir -p workspace
#        - checkout
#        - restore_cache:
#            keys:
#              - v1-dependencies-{{ checksum "build.gradle" }}
#              - v1-dependencies-
#        - run: gradle dependencies
#        - run:
#            name: Running Unit Tests
#            command: gradle test
#        - run:
#            name: Building the project
#            command: gradle build
#        - run: |
#            cp ./* /tmp/workspace
#            ls -lart /tmp/workspace
#    publish:
#      exector: my-executor
#      steps:
#        - attach_workspace:
#            at: /tmp
#        - setup_remote_docker
#        - run:
#            name: Build Docker Image
#            command: |
#              ls -l
#              ls -l workspace/
#
#workflows:
#  version: 2
#
#  btd:
#    jobs:
#      - build
#      - publish:
#          requires:
#            - build